# ====================================================================
# 🤖 Telegram Bot 发卡机器人配置文件
# ====================================================================
# 本配置文件包含机器人运行所需的所有参数，请根据实际情况修改

# === 🤖 Telegram Bot 基本配置 ===
BOT_TOKEN=     # Bot Token（从 @BotFather 获取）
ADMIN_IDS=               # 管理员用户ID列表（用逗号分隔，这些ID拥有管理权限）
NOTIFY_CHANNEL_ID=-                            # 通知频道ID（充值到账和库存通知推送到此频道）

# === 📞 客服与联系方式配置 ===
CUSTOMER_SERVICE=@o9eth @o7eth @a8ppp                                      # 客服联系方式（用户遇到问题时的联系人）
OFFICIAL_CHANNEL=@idclub9999                                      # 官方频道（展示给用户的官方信息频道）
RESTOCK_GROUP=@p5540                                  # 补货通知群（商品到货通知群组链接）
TUTORIAL_LINK=https://t.me/p5540                      # 使用教程链接（帮助用户了解如何使用）
TRX_EXCHANGE_ADDRESS=         # TRX兑换地址（用于USDT兑换TRX的地址）

# === ⛓️ Tron 区块链API配置 ===
USDT_CONTRACT=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t
TRON_API_KEYS=
# ☝️ 多个API密钥用逗号分隔，系统会自动轮换使用（防止单个密钥限流）

# === 🗄️ MongoDB 数据库配置 ===
MONGO_URI=mongodb://127.0.0.1:27017/                        # 数据库连接地址（本地：127.0.0.1，远程：IP地址或域名）
MONGO_DB_MAIN=qukuailian                                     # 主数据库名（存储交易记录等核心业务数据）
MONGO_DB_QUKUAI=qukuailian                                   # 区块链监听数据库名（存储链上交易数据）
MONGO_DB_BOT=9haobot                                       # 机器人数据库名（存储用户信息、余额、订单等）
MONGO_DB_XCHP=9haobot                                      # 商城数据库名（存储商品信息、配置文本等）
MONGO_DB_NAME=9haobot                                      # 默认数据库名（程序默认使用的数据库）

# === 🐰 RabbitMQ 消息队列配置 ===
RABBITMQ_HOST=194.15.46.46                            # RabbitMQ服务器地址
RABBITMQ_PORT=5672                                           # RabbitMQ服务端口（默认5672）
RABBITMQ_USER=9haobot                                        # RabbitMQ登录用户名（账号）
RABBITMQ_PASS=9haobot                                         # RabbitMQ登录密码（密码）
RABBITMQ_VHOST=/                                             # 虚拟主机名（默认用/即可）
RABBITMQ_QUEUE=telegram                                      # 队列名称（接收区块链交易推送的队列）
RABBITMQ_INPUT_QUEUE=telegram
RABBITMQ_OUTPUT_QUEUE=tronweb_data


# === 🌐 Flask Web服务配置 ===
FLASK_PORT=8000                                              # Web服务端口（用于接收支付回调）
FLASK_HOST=0.0.0.0                                           # 绑定地址（0.0.0.0表示接受所有IP访问）
ORDER_EXPIRE_MINUTES=10                                      # 订单过期时间（分钟，超时未支付自动取消）
CLEANUP_INTERVAL_MINUTES=3                                   # 清理任务间隔（分钟，定期清理过期订单）
MONEY_TOLERANCE=0.01                                         # 金额容差（充值金额匹配误差范围）

# === 💳 支付功能配置 ===
ENABLE_ALIPAY_WECHAT=false                                    # 是否启用微信支付宝功能（true=启用，false=仅显示USDT）

# === 💳 易支付平台配置 ===
EASYPAY_PID=2808                                             # 商户ID（易支付平台分配的商户号）
EASYPAY_KEY=8oqh83Rd8X908OXYz8xgG3h88OG883Qx                 # 商户密钥（用于签名验证，防止数据篡改）
EASYPAY_GATEWAY=https://a510a.lempay.com/submit.php         # 支付网关（提交订单的接口地址）
EASYPAY_NOTIFY=http://45.76.34.221:8000/callback          # 异步通知地址（支付成功后平台回调此地址）
EASYPAY_RETURN=http://45.76.34.221/return_url.php         # 同步跳转地址（用户支付完成后跳转页面）

# === 📁 文件和资源配置 ===
LOG_FILE_PATH=logs/bot.log                                   # 日志文件保存路径
DEFAULT_IMAGE_URL=https://th.bing.com/th/id/OIP.zl_78JqApTLDpDnc7iN5zgHaHa?w=203&h=189&c=7&r=0&o=7&pid=1.7&rm=3
# ☝️ 默认商品图片URL（当商品没有设置图片时使用）

# === ⏰ 时间配置（单位：秒）===
MESSAGE_DELETE_DELAY=3                                       # 普通提示消息自动删除延迟
TRX_MESSAGE_DELETE_DELAY=300                                 # TRX兑换消息删除延迟（5分钟）
BOT_TIMEOUT=600                                              # 机器人轮询超时时间（10分钟）
REQUEST_TIMEOUT=20                                           # HTTP请求超时时间
STOCK_NOTIFICATION_DELAY=3                                   # 库存通知发送延迟
BOT_USERNAME=session9haobot                                       # 机器人用户名（用于生成商品购买链接）

# Agent Bot Configuration
# Generate a random 32-byte key and encode as base64:
# python3 -c "import os, base64; print(base64.b64encode(os.urandom(32)).decode())"
AGENT_TOKEN_AES_KEY=ORgceK7acKBjw/P5g+zM/RfO5VJ0xZwlaMptMEdmmrQ=
