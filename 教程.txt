1.首先安装mongo，需要打开安全身份验证，改了密码之后关闭
2.安装进程守护管理
3.创建文件目录上传我给你的源码

现在填写env文件

填写好了之后 我们要安装python3.8 因为我们是telegram-bot13.15的版本 

安装依赖

sudo dnf groupinstall -y "Development Tools"
sudo dnf install -y gcc make wget zlib-devel bzip2 bzip2-devel \
    xz-devel libffi-devel ncurses-devel sqlite-devel readline-devel \
    tk-devel gdbm-devel libuuid-devel


下载源码

wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz
tar -xvzf Python-3.8.18.tgz
cd Python-3.8.18


编译安装

./configure --enable-optimizations
make -j$(nproc)
sudo make altinstall


⚠️ 注意：用 make altinstall，避免覆盖系统自带的 python3。

验证安装

python3.8 --version

现在开始安装模块 稍等一下

为了方便直接找AI就行了 

或者直接使用 python3.8 -m pip install -r requirements.txt

如果你要启动支付宝微信就要打开8000端口

现在开始配置zf和jxqk的 

4.安装支付插件 服务器版本要 CentOS Stream 9  

wget https://github.com/rabbitmq/erlang-rpm/releases/download/v24.3.4.11/erlang-24.3.4.11-1.el9.x86_64.rpm


dnf install erlang-24.3.4.11-1.el9.x86_64.rpm

wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.12.14/rabbitmq-server-3.12.14-1.el8.noarch.rpm


dnf install rabbitmq-server-3.12.14-1.el8.noarch.rpm


systemctl status rabbitmq-server



systemctl start rabbitmq-server

systemctl enable --now rabbitmq-server

rabbitmq-plugins enable rabbitmq_management

rabbitmqctl add_user admin admin

rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"

rabbitmqctl set_user_tags admin administrator


sudo firewall-cmd --zone=public --add-port=15672/tcp --permanent


sudo firewall-cmd --reload



http://ip:15672


这里就搞定了 就不用管了 都没问题了好了现在就是搭建完成了 

==========================================
代理机器人 (Agent Bot) 功能说明
==========================================

本系统支持多租户代理机器人架构 (Scheme B)，允许创建多个代理机器人，共享同一库存但可设置自己的价格标记。

一、环境变量配置
------------------------------------------
在 .env 文件中添加以下新配置：

# 代理机器人加密密钥 (必需)
# 生成方法：python3 -c "import os, base64; print(base64.b64encode(os.urandom(32)).decode())"
AGENT_TOKEN_AES_KEY=your_base64_encoded_32_byte_key_here

说明：
- 这个密钥用于加密代理机器人的 Token
- 必须是 32 字节（256位）密钥的 base64 编码
- 生成后请妥善保管，丢失后无法解密已有代理机器人的 Token

二、数据迁移
------------------------------------------
首次部署代理功能需要运行数据迁移脚本：

python3.8 migrate_data.py

迁移脚本会自动：
1. 为现有用户添加 tenant 字段（设为 "master"）
2. 为现有订单添加 tenant 和 sold_by 字段
3. 为现有充值记录添加 tenant 字段
4. 规范化库存状态为整数（0=可用，1=已售）

三、管理员命令
------------------------------------------

1. 创建代理机器人
/agent_create <agent_id> <bot_token> <name>

示例：
/agent_create agent001 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz MyFirstAgent

参数说明：
- agent_id: 代理唯一标识符（建议使用 agent001, agent002 等）
- bot_token: 从 @BotFather 获取的机器人 Token
- name: 代理显示名称

2. 查看所有代理
/agent_list

显示所有代理的状态、定价和运行情况

3. 暂停代理
/agent_pause <agent_id>

示例：
/agent_pause agent001

暂停代理机器人的运行

4. 恢复代理
/agent_resume <agent_id>

示例：
/agent_resume agent001

恢复已暂停的代理机器人

5. 设置代理定价
/agent_pricing <agent_id> <percent|fixed> <value>

示例：
/agent_pricing agent001 percent 10  # 设置10%加价
/agent_pricing agent001 fixed 5     # 设置每个商品加5 USDT

定价类型说明：
- percent: 百分比加价（基于基础价格）
- fixed: 固定金额加价（每个商品加固定 USDT）

6. 查看提现申请
/withdraw_list [status]

状态选项：requested(待审核), approved(已批准), paid(已支付), rejected(已拒绝)

7. 批准提现
/withdraw_approve <withdrawal_id>

8. 拒绝提现
/withdraw_reject <withdrawal_id> [原因]

9. 标记已支付
/withdraw_pay <withdrawal_id> <txid>

四、代理功能说明
------------------------------------------

1. 共享库存
- 所有代理机器人共享主机器人的库存
- 使用原子操作防止超卖
- 库存更新实时同步

2. 价格标记
- 代理可设置百分比或固定金额加价
- 价格计算：最终价格 = 基础价格 + 加价
- 用户看到的是加价后的价格

3. 收益分配
- 代理从每笔订单中赚取加价部分
- 收益有48小时成熟期
- 成熟后可申请提现

4. 支付流程
- 充值通过主机器人的支付渠道
- 订单和用户按租户隔离
- 代理无需配置独立支付通道

5. 提现流程
- 代理申请提现
- 管理员审核批准
- 管理员支付并提供 TXID
- 系统自动更新账本

五、代理自助功能
------------------------------------------

代理机器人的用户（代理主）可以：
1. 查看钱包余额（可用、待成熟、已提现）
2. 设置自己的定价（百分比或固定）
3. 申请提现
4. 查看提现历史

六、数据库索引
------------------------------------------

系统启动时会自动创建必要的索引：
- user: (tenant, user_id) 唯一索引
- gmjlu: (tenant), (sold_by.type), (time)
- topup: (tenant), (status), (time)
- hb: (nowuid, state)
- agents: (agent_id) 唯一索引
- agent_ledger: (agent_id, status), (status, mature_at)
- agent_withdrawals: (agent_id, status)

七、安全注意事项
------------------------------------------

1. 保管好 AGENT_TOKEN_AES_KEY，丢失后无法解密代理 Token
2. 定期备份数据库
3. 监控代理机器人运行状态
4. 审核提现申请时验证钱包地址
5. 妥善保管 TXID 记录

八、故障排查
------------------------------------------

1. 代理机器人无法启动
- 检查 Bot Token 是否正确
- 检查 AGENT_TOKEN_AES_KEY 是否设置
- 查看日志文件 logs/bot.log

2. 库存扣减失败
- 可能是并发冲突，系统会自动重试
- 检查 hb 集合的 state 字段是否为整数

3. 提现金额不正确
- 检查代理账本（agent_ledger）
- 确认成熟期设置（默认48小时）

4. 代理看不到收益
- 确认订单已完成
- 检查收益是否还在成熟期内

九、升级说明
------------------------------------------

从旧版本升级：
1. 拉取最新代码
2. 更新依赖：python3.8 -m pip install -r requirements.txt
3. 设置 AGENT_TOKEN_AES_KEY 环境变量
4. 运行数据迁移：python3.8 migrate_data.py
5. 重启机器人

十、性能优化
------------------------------------------

1. 代理数量建议不超过 50 个
2. 使用 MongoDB 索引提升查询性能
3. 定期清理过期订单和日志
4. 监控系统资源使用情况

==========================================